// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PhotoLibraryBackend.Data;

#nullable disable

namespace PhotoLibraryBackend.Data.Migrations
{
    [DbContext(typeof(PhotoLibraryBackendDbContext))]
    [Migration("20231224134709_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PhotoLibraryBackend.Common.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AlbumId"));

                    b.Property<bool>("MarkedAsFavorite")
                        .HasColumnType("boolean");

                    b.Property<bool>("MarkedAsImportant")
                        .HasColumnType("boolean");

                    b.Property<bool>("MarkedAsPrint")
                        .HasColumnType("boolean");

                    b.Property<long>("MediaId")
                        .HasColumnType("bigint");

                    b.HasKey("AlbumId");

                    b.HasIndex("MediaId")
                        .IsUnique();

                    b.ToTable("Album");
                });

            modelBuilder.Entity("PhotoLibraryBackend.Common.ImporterReport", b =>
                {
                    b.Property<int>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Timestamp"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Severity")
                        .HasColumnType("integer");

                    b.HasKey("Timestamp");

                    b.ToTable("ImporterReport");
                });

            modelBuilder.Entity("PhotoLibraryBackend.Common.MediaAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AddressId"));

                    b.Property<decimal?>("AddressDistance")
                        .HasColumnType("NUMERIC(5,3)");

                    b.Property<string>("AddressLabel")
                        .HasColumnType("text");

                    b.Property<string>("AddressName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AddressReadDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("NUMERIC(7,4)");

                    b.Property<string>("Locality")
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("NUMERIC(7,4)");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<decimal?>("VenueDistance")
                        .HasColumnType("NUMERIC(5,3)");

                    b.Property<string>("VenueLabel")
                        .HasColumnType("text");

                    b.Property<string>("VenueName")
                        .HasColumnType("text");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PhotoLibraryBackend.Common.MediaFileInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateTimeOriginal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("FileExt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("MediaAddressId")
                        .HasColumnType("integer");

                    b.Property<string>("PictureMaker")
                        .HasColumnType("text");

                    b.Property<string>("TagLabel")
                        .HasColumnType("text");

                    b.Property<byte[]>("Thumbnail")
                        .HasColumnType("bytea");

                    b.Property<int?>("ThumbnailHeight")
                        .HasColumnType("integer");

                    b.Property<int?>("ThumbnailWidth")
                        .HasColumnType("integer");

                    b.Property<int?>("VideoDurationSec")
                        .HasColumnType("integer");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DateTimeOriginal")
                        .IsUnique();

                    b.HasIndex("FullPath")
                        .IsUnique();

                    b.ToTable("Media");
                });

            modelBuilder.Entity("PhotoLibraryBackend.Common.Album", b =>
                {
                    b.HasOne("PhotoLibraryBackend.Common.MediaFileInfo", "MediaFileInfo")
                        .WithOne("Album")
                        .HasForeignKey("PhotoLibraryBackend.Common.Album", "MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaFileInfo");
                });

            modelBuilder.Entity("PhotoLibraryBackend.Common.MediaFileInfo", b =>
                {
                    b.Navigation("Album");
                });
#pragma warning restore 612, 618
        }
    }
}
